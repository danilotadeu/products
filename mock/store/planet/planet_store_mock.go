// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/danilotadeu/star_wars/store/planet (interfaces: Store)

// Package mockStorePlanet is a generated GoMock package.
package mockStorePlanet

import (
	context "context"
	reflect "reflect"

	planet "github.com/danilotadeu/star_wars/model/planet"
	gomock "github.com/golang/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockStore) Delete(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockStoreMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockStore)(nil).Delete), arg0, arg1)
}

// GetAll mocks base method.
func (m *MockStore) GetAll(arg0 context.Context, arg1, arg2 int64, arg3 string) ([]*planet.PlanetDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]*planet.PlanetDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockStoreMockRecorder) GetAll(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockStore)(nil).GetAll), arg0, arg1, arg2, arg3)
}

// GetOne mocks base method.
func (m *MockStore) GetOne(arg0 context.Context, arg1 string) (*planet.PlanetDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOne", arg0, arg1)
	ret0, _ := ret[0].(*planet.PlanetDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOne indicates an expected call of GetOne.
func (mr *MockStoreMockRecorder) GetOne(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOne", reflect.TypeOf((*MockStore)(nil).GetOne), arg0, arg1)
}

// GetOneByID mocks base method.
func (m *MockStore) GetOneByID(arg0 context.Context, arg1 int64) (*planet.PlanetDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOneByID", arg0, arg1)
	ret0, _ := ret[0].(*planet.PlanetDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOneByID indicates an expected call of GetOneByID.
func (mr *MockStoreMockRecorder) GetOneByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOneByID", reflect.TypeOf((*MockStore)(nil).GetOneByID), arg0, arg1)
}

// GetPlanets mocks base method.
func (m *MockStore) GetPlanets(arg0 context.Context) ([]planet.ResultPlanet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlanets", arg0)
	ret0, _ := ret[0].([]planet.ResultPlanet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPlanets indicates an expected call of GetPlanets.
func (mr *MockStoreMockRecorder) GetPlanets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlanets", reflect.TypeOf((*MockStore)(nil).GetPlanets), arg0)
}

// GetTotalPlanets mocks base method.
func (m *MockStore) GetTotalPlanets(arg0 context.Context) (*int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalPlanets", arg0)
	ret0, _ := ret[0].(*int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalPlanets indicates an expected call of GetTotalPlanets.
func (mr *MockStoreMockRecorder) GetTotalPlanets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalPlanets", reflect.TypeOf((*MockStore)(nil).GetTotalPlanets), arg0)
}

// SavePlanet mocks base method.
func (m *MockStore) SavePlanet(arg0 context.Context, arg1 planet.Planet) (*int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavePlanet", arg0, arg1)
	ret0, _ := ret[0].(*int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SavePlanet indicates an expected call of SavePlanet.
func (mr *MockStoreMockRecorder) SavePlanet(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavePlanet", reflect.TypeOf((*MockStore)(nil).SavePlanet), arg0, arg1)
}
