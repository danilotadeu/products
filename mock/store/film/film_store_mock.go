// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/danilotadeu/star_wars/store/film (interfaces: Store)

// Package mockStoreFilm is a generated GoMock package.
package mockStoreFilm

import (
	context "context"
	reflect "reflect"

	planet "github.com/danilotadeu/star_wars/model/film"
	gomock "github.com/golang/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// GetFilmWithPlanet mocks base method.
func (m *MockStore) GetFilmWithPlanet(arg0 context.Context, arg1, arg2 int64) (*planet.FilmPlanet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilmWithPlanet", arg0, arg1, arg2)
	ret0, _ := ret[0].(*planet.FilmPlanet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilmWithPlanet indicates an expected call of GetFilmWithPlanet.
func (mr *MockStoreMockRecorder) GetFilmWithPlanet(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilmWithPlanet", reflect.TypeOf((*MockStore)(nil).GetFilmWithPlanet), arg0, arg1, arg2)
}

// GetFilms mocks base method.
func (m *MockStore) GetFilms(arg0 context.Context, arg1 []string) ([]planet.ResultFilm, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilms", arg0, arg1)
	ret0, _ := ret[0].([]planet.ResultFilm)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilms indicates an expected call of GetFilms.
func (mr *MockStoreMockRecorder) GetFilms(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilms", reflect.TypeOf((*MockStore)(nil).GetFilms), arg0, arg1)
}

// GetFilmsByPlanetIDs mocks base method.
func (m *MockStore) GetFilmsByPlanetIDs(arg0 context.Context, arg1 []int64) ([]planet.FilmPlanet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilmsByPlanetIDs", arg0, arg1)
	ret0, _ := ret[0].([]planet.FilmPlanet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilmsByPlanetIDs indicates an expected call of GetFilmsByPlanetIDs.
func (mr *MockStoreMockRecorder) GetFilmsByPlanetIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilmsByPlanetIDs", reflect.TypeOf((*MockStore)(nil).GetFilmsByPlanetIDs), arg0, arg1)
}

// GetOne mocks base method.
func (m *MockStore) GetOne(arg0 context.Context, arg1 string) (*planet.Film, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOne", arg0, arg1)
	ret0, _ := ret[0].(*planet.Film)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOne indicates an expected call of GetOne.
func (mr *MockStoreMockRecorder) GetOne(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOne", reflect.TypeOf((*MockStore)(nil).GetOne), arg0, arg1)
}

// SaveFilm mocks base method.
func (m *MockStore) SaveFilm(arg0 context.Context, arg1 planet.ResultFilm) (*int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFilm", arg0, arg1)
	ret0, _ := ret[0].(*int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFilm indicates an expected call of SaveFilm.
func (mr *MockStoreMockRecorder) SaveFilm(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFilm", reflect.TypeOf((*MockStore)(nil).SaveFilm), arg0, arg1)
}

// SaveFilmWithPlanet mocks base method.
func (m *MockStore) SaveFilmWithPlanet(arg0 context.Context, arg1, arg2 int64) (*int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFilmWithPlanet", arg0, arg1, arg2)
	ret0, _ := ret[0].(*int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFilmWithPlanet indicates an expected call of SaveFilmWithPlanet.
func (mr *MockStoreMockRecorder) SaveFilmWithPlanet(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFilmWithPlanet", reflect.TypeOf((*MockStore)(nil).SaveFilmWithPlanet), arg0, arg1, arg2)
}
